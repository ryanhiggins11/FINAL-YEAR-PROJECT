{"version":3,"sources":["components/DeleteBtn/DeleteBtn.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/FormBtn.js","pages/ClockInTimes/ClockInTimes.js","pages/Books/Books.js","pages/Detail/Detail.js","pages/NoMatch/NoMatch.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBtn","props","react_default","a","createElement","Object","assign","className","Jumbotron","_ref","children","style","height","clear","API","getClockInTimes","axios","get","getClockInTime","id","deleteClockInTime","delete","saveClockInTime","clockInTimeData","post","Col","size","split","map","join","Container","fluid","concat","Row","List","ListItem","Input","FormBtn","float","marginBottom","ClockInTimes","Component","state","clockInTimes","employee","clockedInTime","loadClockInTimes","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","this","_this2","Container_Container","Row_Row","Col_Col","components_Jumbotron_Jumbotron","Input_Input","onChange","placeholder","FormBtn_FormBtn","disabled","onClick","length","List_List_List","clockInTime","ListItem_ListItem","key","_id","Link","to","components_DeleteBtn_DeleteBtn","Detail","match","params","NoMatch","role","aria-label","Nav","href","App","BrowserRouter","components_Nav_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad841cc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DeleteBtn.css';\r\n\r\nconst DeleteBtn = props => (\r\n\t<span className=\"delete-btn\" {...props}>\r\n\t\t✗\r\n\t</span>\r\n);\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\n\r\nconst Jumbotron = ({ children }) => (\r\n  <div style={{ height: 300, clear: \"both\" }} className=\"jumbotron\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Jumbotron;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n\t// // Gets all books\r\n\t// getBooks: function() {\r\n\t// \treturn axios.get('/api/books');\r\n\t// },\r\n\t// // Gets the book with the given id\r\n\t// getBook: function(id) {\r\n\t// \treturn axios.get('/api/books/' + id);\r\n\t// },\r\n\t// // Deletes the book with the given id\r\n\t// deleteBook: function(id) {\r\n\t// \treturn axios.delete('/api/books/' + id);\r\n\t// },\r\n\t// // Saves a book to the database\r\n\t// saveBook: function(bookData) {\r\n\t// \treturn axios.post('/api/books', bookData);\r\n\t// }//,\r\n\r\n\t// Gets all books\r\n\tgetClockInTimes: function() {\r\n\t\treturn axios.get('/api/clockInTimes');\r\n\t},\r\n\t// Gets the book with the given id\r\n\tgetClockInTime: function(id) {\r\n\t\treturn axios.get('/api/clockInTimes/' + id);\r\n\t},\r\n\t// Deletes the book with the given id\r\n\tdeleteClockInTime: function(id) {\r\n\t\treturn axios.delete('/api/clockInTimes/' + id);\r\n\t},\r\n\t// Saves a book to the database\r\n\tsaveClockInTime: function(clockInTimeData) {\r\n\t\treturn axios.post('/api/clockInTimes', clockInTimeData);\r\n\t}\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Col = ({ size, children }) => (\r\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Container = ({ fluid, children }) => (\r\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Row = ({ fluid, children }) => (\r\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport const List = ({ children }) => {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">\r\n        {children}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ListItem = props => (\r\n  <li className=\"list-group-item\">\r\n    {props.children}\r\n  </li>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n  <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const FormBtn = props => (\r\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n  </button>\r\n);\r\n","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\nclass ClockInTimes extends Component {\r\n\tstate = {\r\n\t\tclockInTimes: [],\r\n\t\temployee: '',\r\n\t\tclockedInTime: ''\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadClockInTimes();\r\n\t}\r\n\r\n\tloadClockInTimes = () => {\r\n\t\tAPI.getClockInTimes()\r\n\t\t\t.then(res => this.setState({ clockInTimes: res.data, employee: '', clockedInTime: '' }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\tdeleteClockInTime = id => {\r\n\t\tAPI.deleteClockInTime(id)\r\n\t\t\t.then(res => this.loadClockInTimes())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\thandleFormSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.state.employee && this.state.clockedInTime) {\r\n\t\t\tAPI.saveClockInTime({\r\n\t\t\t\temployee: this.state.employee,\r\n\t\t\t\tclockedInTime: this.state.clockedInTime\r\n\t\t\t})\r\n\t\t\t\t.then(res => this.loadClockInTimes())\r\n\t\t\t\t.catch(err => console.log(err));\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-6\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>Enter Employee and Clock In Times</h1>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.employee}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"employee\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Employee (required)\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.clockedInTime}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"clockedInTime\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Clock In Time (required)\"\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<FormBtn\r\n\t\t\t\t\t\t\t\tdisabled={!(this.state.clockedInTime && this.state.employee)}\r\n\t\t\t\t\t\t\t\tonClick={this.handleFormSubmit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit time\r\n\t\t\t\t\t\t\t</FormBtn>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>Employees and times they clocked in</h1>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t{this.state.clockInTimes.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t{this.state.clockInTimes.map(clockInTime => (\r\n\t\t\t\t\t\t\t\t\t<ListItem key={clockInTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={'/clockInTimes/' + clockInTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{clockInTime.employee} clocked in at {clockInTime.clockedInTime}\r\n\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteBtn onClick={() => this.deleteClockInTime(clockInTime._id)} />\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ClockInTimes;\r\n","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\nclass Books extends Component {\r\n\tstate = {\r\n\t\tbooks: [],\r\n\t\ttitle: '',\r\n\t\tauthor: ''\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadBooks();\r\n\t}\r\n\r\n\tloadBooks = () => {\r\n\t\tAPI.getBooks()\r\n\t\t\t.then(res => this.setState({ books: res.data, title: '', author: '' }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\tdeleteBook = id => {\r\n\t\tAPI.deleteBook(id)\r\n\t\t\t.then(res => this.loadBooks())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\thandleFormSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.state.title && this.state.author) {\r\n\t\t\tAPI.saveBook({\r\n\t\t\t\ttitle: this.state.title,\r\n\t\t\t\tauthor: this.state.author\r\n\t\t\t})\r\n\t\t\t\t.then(res => this.loadBooks())\r\n\t\t\t\t.catch(err => console.log(err));\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-6\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>What Books Should I Read?</h1>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Title (required)\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.author}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"author\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Author (required)\"\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<FormBtn\r\n\t\t\t\t\t\t\t\tdisabled={!(this.state.author && this.state.title)}\r\n\t\t\t\t\t\t\t\tonClick={this.handleFormSubmit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit Book\r\n\t\t\t\t\t\t\t</FormBtn>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>Books On My List</h1>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t{this.state.books.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t{this.state.books.map(book => (\r\n\t\t\t\t\t\t\t\t\t<ListItem key={book._id}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={'/books/' + book._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{book.title} by {book.author}\r\n\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteBtn onClick={() => this.deleteBook(book._id)} />\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Books;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\n\r\nclass Detail extends Component {\r\n\tstate = {\r\n\t\t//book: {}\r\n\t\tclockInTime: {}\r\n\t};\r\n\r\n\t// componentDidMount() {\r\n\t// \tAPI.getBook(this.props.match.params.id)\r\n\t// \t\t.then(res => this.setState({ book: res.data }))\r\n\t// \t\t.catch(err => console.log(err));\r\n\t// }\r\n\r\n\tcomponentDidMount() {\r\n\t\tAPI.getClockInTime(this.props.match.params.id)\r\n\t\t\t.then(res => this.setState({ clockInTime: res.data }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-12\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\t{/* {this.state.book.title} by {this.state.book.author} */}\r\n\t\t\t\t\t\t\t\t{this.state.clockInTime.employee} clocked in at {this.state.clockInTime.clockedInTime}\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-2\">\r\n\t\t\t\t\t\t<Link to=\"/\">← Back to Home page</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\n\r\nconst NoMatch = () => (\r\n  <Container fluid>\r\n    <Row>\r\n      <Col size=\"md-12\">\r\n        <Jumbotron>\r\n          <h1>404 Page Not Found</h1>\r\n          <h1>\r\n            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n              🙄\r\n            </span>\r\n          </h1>\r\n        </Jumbotron>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\n\r\nconst Nav = () => (\r\n\t<nav className=\"navbar navbar-inverse navbar-top\">\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"navbar-header\">\r\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">\r\n\t\t\t\t\tReact Reading List\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</nav>\r\n);\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Books from './pages/Books';\r\nimport ClockInTimes from './pages/ClockInTimes';\r\nimport Detail from './pages/Detail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Nav from './components/Nav';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Nav />\r\n\t\t\t<Switch>\r\n\t\t\t\t{/* <Route exact path=\"/\" component={Books} />\r\n\t\t\t\t<Route exact path=\"/books\" component={Books} />\r\n\t\t\t\t<Route exact path=\"/books/:id\" component={Detail} />\r\n\t\t\t\t<Route component={NoMatch} /> */}\r\n\r\n\t\t\t\t<Route exact path=\"/\" component={ClockInTimes} />\r\n\t\t\t\t<Route exact path=\"/clockInTimes\" component={ClockInTimes} />\r\n\t\t\t\t<Route exact path=\"/clockInTimes/:id\" component={Detail} />\r\n\t\t\t\t<Route component={NoMatch} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}