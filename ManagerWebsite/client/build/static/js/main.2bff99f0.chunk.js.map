{"version":3,"sources":["components/DeleteBtn/DeleteBtn.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","pages/ClockInTimes/ClockInTimes.js","pages/ClockInDetail/ClockInDetail.js","pages/ClockOutDetail/ClockOutDetail.js","pages/NoMatch/NoMatch.js","components/Nav/Nav.js","pages/ClockOutTimes/ClockOutTimes.js","pages/BreakTimes/BreakTimes.js","pages/BreakDetail/BreakDetail.js","pages/IsSick/IsSick.js","pages/User/User.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBtn","props","react_default","a","createElement","Object","assign","className","Jumbotron","_ref","children","style","height","clear","API","getClockInTimes","axios","get","getClockInTime","id","deleteClockInTime","delete","saveClockInTime","clockInTimeData","post","getClockOutTimes","getClockOutTime","deleteClockOutTime","saveClockOutTime","clockOutTimeData","getBreakTimes","getBreakTime","deleteBreakTime","saveBreakTime","breakTimeData","getIsSicks","getIsSick","deleteIsSick","getUsers","getUser","deleteUser","saveUser","userData","Col","size","split","map","join","Container","fluid","concat","Row","List","ListItem","ClockInTimes","state","clockInTimes","name","clockedInTime","loadClockInTimes","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","value","defineProperty","this","_this2","Container_Container","Row_Row","Col_Col","width","src","alt","classname","length","List_List_List","clockInTime","ListItem_ListItem","key","_id","Link","to","components_DeleteBtn_DeleteBtn","onClick","href","React","Component","ClockInDetail","match","params","components_Jumbotron_Jumbotron","ClockOutDetail","clockOutTime","clockedOutTime","NoMatch","role","aria-label","Navbar","ClockOutTimes","clockOutTimes","loadClockOutTimes","BreakTimes","breakTimes","breakStartTime","breakFinishTime","loadBreakTimes","breakTime","BreakDetail","IsSick","isSicks","isEmployeeSick","loadIsSicks","isSick","User","firstName","secondName","dateOfBirth","emergencyContact","loadUsers","App","BrowserRouter","Nav_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAYeA,SANG,SAAAC,GAAK,OACtBC,EAAAC,EAAAC,cAAA,OAAAC,OAAAC,OAAA,CAAMC,UAAU,cAAiBN,GAAjC,qBCKcO,EANG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChBR,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAAUN,UAAU,aACnDG,oBCNUI,EAAA,CAEdC,gBAAiB,WAChB,OAAOC,IAAMC,IAAI,sBAGlBC,eAAgB,SAASC,GACxB,OAAOH,IAAMC,IAAI,qBAAuBE,IAGzCC,kBAAmB,SAASD,GAC3B,OAAOH,IAAMK,OAAO,qBAAuBF,IAG5CG,gBAAiB,SAASC,GACzB,OAAOP,IAAMQ,KAAK,oBAAqBD,IAGxCE,iBAAkB,WACjB,OAAOT,IAAMC,IAAI,uBAGlBS,gBAAiB,SAASP,GACzB,OAAOH,IAAMC,IAAI,sBAAwBE,IAG1CQ,mBAAoB,SAASR,GAC5B,OAAOH,IAAMK,OAAO,sBAAwBF,IAG7CS,iBAAkB,SAASC,GAC1B,OAAOb,IAAMQ,KAAK,qBAAsBK,IAGzCC,cAAe,WACd,OAAOd,IAAMC,IAAI,oBAGlBc,aAAc,SAASZ,GACtB,OAAOH,IAAMC,IAAI,mBAAqBE,IAGvCa,gBAAiB,SAASb,GACzB,OAAOH,IAAMK,OAAO,mBAAqBF,IAG1Cc,cAAe,SAASC,GACvB,OAAOlB,IAAMQ,KAAK,kBAAmBU,IAGnCC,WAAY,WACR,OAAOnB,IAAMC,IAAI,gBAGrBmB,UAAW,SAASjB,GAChB,OAAOH,IAAMC,IAAI,eAAiBE,IAGtCkB,aAAc,SAASlB,GACnB,OAAOH,IAAMK,OAAO,eAAiBF,IAI5CmB,SAAU,WACT,OAAOtB,IAAMC,IAAI,cAGlBsB,QAAS,SAASpB,GACjB,OAAOH,IAAMC,IAAI,aAAeE,IAGjCqB,WAAY,SAASrB,GACpB,OAAOH,IAAMK,OAAO,aAAeF,IAGpCsB,SAAU,SAASC,GAClB,OAAO1B,IAAMQ,KAAK,YAAakB,aCxEpBC,EAAM,SAAAlC,GAAA,IAAGmC,EAAHnC,EAAGmC,KAAMlC,EAATD,EAASC,SAAT,OACjBR,EAAAC,EAAAC,cAAA,OAAKG,UAAWqC,EAAKC,MAAM,KAAKC,IAAI,SAAAF,GAAI,MAAI,OAASA,IAAMG,KAAK,MAC7DrC,ICHQsC,EAAY,SAAAvC,GAAA,IAAGwC,EAAHxC,EAAGwC,MAAOvC,EAAVD,EAAUC,SAAV,OACvBR,EAAAC,EAAAC,cAAA,OAAKG,UAAS,YAAA2C,OAAcD,EAAQ,SAAW,KAC5CvC,ICDQyC,EAAM,SAAA1C,GAAA,IAAGwC,EAAHxC,EAAGwC,MAAOvC,EAAVD,EAAUC,SAAV,OACjBR,EAAAC,EAAAC,cAAA,OAAKG,UAAS,MAAA2C,OAAQD,EAAQ,SAAW,KACtCvC,ICLQ0C,SAAO,SAAA3C,GAAkB,IAAfC,EAAeD,EAAfC,SACrB,OACER,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cACXG,MCLI2C,EAAW,SAAApD,GAAK,OAC3BC,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBACXN,EAAMS,WCiGI4C,6MAxFdC,MAAQ,CACPC,aAAc,GACdC,KAAM,GACNC,cAAe,MAShBC,iBAAmB,WAClB7C,EAAIC,kBACF6C,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAEP,aAAcK,EAAIG,KAAMP,KAAM,GAAIC,cAAe,OAC7EO,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5B9C,kBAAoB,SAAAD,GACnBL,EAAIM,kBAAkBD,GACpByC,KAAK,SAAAC,GAAG,OAAIC,EAAKH,qBACjBM,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BG,kBAAoB,SAAAC,GAAS,IAAAC,EACJD,EAAME,OAAtBf,EADoBc,EACpBd,KAAMgB,EADcF,EACdE,MACdX,EAAKC,SAAL1D,OAAAqE,EAAA,EAAArE,CAAA,GACEoD,EAAOgB,wFArBTE,KAAKhB,oDAkCG,IAAAiB,EAAAD,KACR,OACCzE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,cAEV1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,uBAAuBC,IAAI,sBAIhEhF,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,YAAWjF,EAAAC,EAAAC,cAAA,sCAExBuE,KAAKpB,MAAMC,aAAa4B,OACxBlF,EAAAC,EAAAC,cAACiF,EAAD,KAEEV,KAAKpB,MAAMC,aAAaV,IAAI,SAAAwC,GAAW,OACvCpF,EAAAC,EAAAC,cAACmF,EAAD,CAAUC,IAAKF,EAAYG,KAC1BvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAI,iBAAmBL,EAAYG,KACxCvF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAAKkF,EAAY7B,KAAjB,6BAAiD6B,EAAY5B,eAC7DxD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwF,EAAD,CAAWC,QAAS,kBAAMjB,EAAKxD,kBAAkBkE,EAAYG,eAUtEvF,EAAAC,EAAAC,cAAA,yCAEDF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,iBAAgB5F,EAAAC,EAAAC,cAAA,kCACxBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,cAAa5F,EAAAC,EAAAC,cAAA,8BACrBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,UAAS5F,EAAAC,EAAAC,cAAA,qCACjBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,QAAO5F,EAAAC,EAAAC,cAAA,6CAjFM2F,IAAMC,WC8ClBC,6MA/Cd1C,MAAQ,CACP+B,YAAa,uFAIM,IAAAV,EAAAD,KACnB7D,EAAII,eAAeyD,KAAK1E,MAAMiG,MAAMC,OAAOhF,IACzCyC,KAAK,SAAAC,GAAG,OAAIe,EAAKb,SAAS,CAAEuB,YAAazB,EAAIG,SAC7CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAS3B,OACChE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,cAET1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,wBAAwBC,IAAI,qBAIjEhF,EAAAC,EAAAC,cAACgG,EAAD,KACClG,EAAAC,EAAAC,cAAA,UACEuE,KAAKpB,MAAM+B,YAAY7B,KADzB,kBAC8CkB,KAAKpB,MAAM+B,YAAY5B,kBAOxExD,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,QACT1C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAG,KAAT,+CA3CsBK,aCgDbK,6MA9Cd9C,MAAQ,CACP+C,aAAc,uFAIK,IAAA1B,EAAAD,KACnB7D,EAAIY,gBAAgBiD,KAAK1E,MAAMiG,MAAMC,OAAOhF,IAC1CyC,KAAK,SAAAC,GAAG,OAAIe,EAAKb,SAAS,CAAEuC,aAAczC,EAAIG,SAC9CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAS3B,OACChE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,SAET1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,yBAAyBC,IAAI,qBAIlEhF,EAAAC,EAAAC,cAACgG,EAAD,KACClG,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAAKuE,KAAKpB,MAAM+C,aAAa7C,KAA7B,+BAA+DkB,KAAKpB,MAAM+C,aAAaC,oBAM3FrG,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,QACT1C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAG,kBAAT,4CAxCuBK,aCkBdQ,EAjBC,kBACdtG,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACd/C,EAAAC,EAAAC,cAAC0E,EAAD,KACE5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,SACR1C,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMqG,KAAK,MAAMC,aAAW,gCAA5B,sBCQGC,0LAZP,OACIzG,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAK6E,IAAM,wBAAwBC,IAAI,eACvChF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,wDANK4F,cCwFNY,6MAnFdrD,MAAQ,CACPsD,cAAe,GACfpD,KAAM,GACN8C,eAAgB,MASjBO,kBAAoB,WACnBhG,EAAIW,mBACFmC,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAE8C,cAAehD,EAAIG,KAAMP,KAAM,GAAI8C,eAAgB,OAC/EtC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BvC,mBAAqB,SAAAR,GACpBL,EAAIa,mBAAmBR,GACrByC,KAAK,SAAAC,GAAG,OAAIC,EAAKgD,sBACjB7C,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BG,kBAAoB,SAAAC,GAAS,IAAAC,EACJD,EAAME,OAAtBf,EADoBc,EACpBd,KAAMgB,EADcF,EACdE,MACdX,EAAKC,SAAL1D,OAAAqE,EAAA,EAAArE,CAAA,GACEoD,EAAOgB,wFArBTE,KAAKmC,qDAgCG,IAAAlC,EAAAD,KACR,OACCzE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KAEC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,cAEV1C,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,cACdjF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,wBAAwBC,IAAI,uBAIjEhF,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,aAAYjF,EAAAC,EAAAC,cAAA,yCACzBuE,KAAKpB,MAAMsD,cAAczB,OACzBlF,EAAAC,EAAAC,cAACiF,EAAD,KAEEV,KAAKpB,MAAMsD,cAAc/D,IAAI,SAAA+D,GAAa,OAC1C3G,EAAAC,EAAAC,cAACmF,EAAD,CAAUC,IAAKqB,EAAcpB,KAC5BvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAI,kBAAoBkB,EAAcpB,KAC3CvF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAAKyG,EAAcpD,KAAnB,mBAAyCoD,EAAcN,gBACvDrG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwF,EAAD,CAAWC,QAAS,kBAAMjB,EAAKjD,mBAAmBkF,EAAcpB,eAOzEvF,EAAAC,EAAAC,cAAA,yCAEDF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,gBAAe5F,EAAAC,EAAAC,cAAA,iCACvBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,cAAa5F,EAAAC,EAAAC,cAAA,8BACrBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,UAAS5F,EAAAC,EAAAC,cAAA,qCACjBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,QAAO5F,EAAAC,EAAAC,cAAA,6CA5EO2F,IAAMC,WCuFnBe,6MArFdxD,MAAQ,CACPyD,WAAY,GACZvD,KAAM,GACNwD,eAAgB,GAChBC,gBAAiB,MASlBC,eAAiB,WAChBrG,EAAIgB,gBACF8B,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAEiD,WAAYnD,EAAIG,KAAMP,KAAM,GAAIwD,eAAgB,GAAKC,gBAAiB,OAClGjD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BlC,gBAAkB,SAAAb,GACjBL,EAAIkB,gBAAgBb,GAClByC,KAAK,SAAAC,GAAG,OAAIC,EAAKqD,mBACjBlD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BG,kBAAoB,SAAAC,GAAS,IAAAC,EACJD,EAAME,OAAtBf,EADoBc,EACpBd,KAAMgB,EADcF,EACdE,MACdX,EAAKC,SAAL1D,OAAAqE,EAAA,EAAArE,CAAA,GACEoD,EAAOgB,wFArBTE,KAAKwC,kDAgCG,IAAAvC,EAAAD,KACR,OACCzE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KAEC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,cAEV1C,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,cACdjF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,sBAAsBC,IAAI,aAI/DhF,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,eAAcjF,EAAAC,EAAAC,cAAA,oCAC3BuE,KAAKpB,MAAMyD,WAAW5B,OACtBlF,EAAAC,EAAAC,cAACiF,EAAD,KAEEV,KAAKpB,MAAMyD,WAAWlE,IAAI,SAAAsE,GAAS,OACnClH,EAAAC,EAAAC,cAACmF,EAAD,CAAUC,IAAK4B,EAAU3B,KACxBvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAI,eAAiByB,EAAU3B,KACpCvF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAAKgH,EAAU3D,KAAf,2BAA6C2D,EAAUH,eAAvD,gCAAoGG,EAAUF,iBAC9GhH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwF,EAAD,CAAWC,QAAS,kBAAMjB,EAAK5C,gBAAgBoF,EAAU3B,eAQlEvF,EAAAC,EAAAC,cAAA,yCAEDF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,gBAAe5F,EAAAC,EAAAC,cAAA,iCACLF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,iBAAgB5F,EAAAC,EAAAC,cAAA,kCAC1CF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,UAAS5F,EAAAC,EAAAC,cAAA,qCACjBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,QAAO5F,EAAAC,EAAAC,cAAA,6CA9EI2F,IAAMC,WC4ChBqB,6MA/Cd9D,MAAQ,CACP6D,UAAW,uFAIQ,IAAAxC,EAAAD,KACnB7D,EAAIiB,aAAa4C,KAAK1E,MAAMiG,MAAMC,OAAOhF,IACvCyC,KAAK,SAAAC,GAAG,OAAIe,EAAKb,SAAS,CAAEqD,UAAWvD,EAAIG,SAC3CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAS3B,OACChE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACf/C,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,SAET1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,uBAAuBC,IAAI,aAIhEhF,EAAAC,EAAAC,cAACgG,EAAD,KACClG,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UAAKuE,KAAKpB,MAAM6D,UAAU3D,KAA1B,iCAA8DkB,KAAKpB,MAAM6D,UAAUH,gBACnF/G,EAAAC,EAAAC,cAAA,UAAKuE,KAAKpB,MAAM6D,UAAU3D,KAA1B,0CAAuEkB,KAAKpB,MAAM6D,UAAUF,qBAMhGhH,EAAAC,EAAAC,cAAC0E,EAAD,KACC5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,QACT1C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAG,eAAT,wCAzCoBK,aCkFXsB,6MA7Ed/D,MAAQ,CACPgE,QAAS,GACT9D,KAAM,GACN+D,eAAgB,MASjBC,YAAc,WACb3G,EAAIqB,aACFyB,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAEwD,QAAS1D,EAAIG,KAAMP,KAAM,GAAI+D,eAAgB,OACzEvD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5B7B,aAAe,SAAAlB,GACdL,EAAIuB,aAAalB,GACfyC,KAAK,SAAAC,GAAG,OAAIC,EAAK2D,gBACjBxD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFAd3BS,KAAK8C,+CAuBO,IAAA7C,EAAAD,KACN,OACIzE,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACZ/C,EAAAC,EAAAC,cAAC0E,EAAD,KAEI5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAKnC,KAAK,cAEV1C,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,cACXjF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,wBAAwBC,IAAI,uBAI3DhF,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,WAAUjF,EAAAC,EAAAC,cAAA,mDACpBuE,KAAKpB,MAAMgE,QAAQnC,OAChBlF,EAAAC,EAAAC,cAACiF,EAAD,KAEKV,KAAKpB,MAAMgE,QAAQzE,IAAI,SAAA4E,GAAM,OAC1BxH,EAAAC,EAAAC,cAACmF,EAAD,CAAUC,IAAKkC,EAAOjC,KACI,OAAzBiC,EAAOF,eACJtH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAKsH,EAAOjE,MACZvD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwF,EAAD,CAAWC,QAAS,kBAAMjB,EAAKvC,aAAaqF,EAAOjC,UAGvDvF,EAAAC,EAAAC,cAAA,mCAOhBF,EAAAC,EAAAC,cAAA,+BAEJF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,gBAAe5F,EAAAC,EAAAC,cAAA,iCACvBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,iBAAgB5F,EAAAC,EAAAC,cAAA,kCACxBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,cAAa5F,EAAAC,EAAAC,cAAA,8BACrBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,QAAO5F,EAAAC,EAAAC,cAAA,6CAtElB4F,aCwFN2B,6MApFdpE,MAAQ,CACPoE,KAAM,GACNlE,KAAM,GACNmE,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,iBAAiB,MASlBC,UAAY,WACXlH,EAAIwB,WACFsB,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAE4D,KAAM9D,EAAIG,KAAMP,KAAM,GAAImE,UAAW,GAAIC,WAAY,GAAIC,YAAa,GAAIC,iBAAkB,OACxH9D,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5B1B,WAAa,SAAArB,GACZL,EAAI0B,WAAWrB,GACbyC,KAAK,SAAAC,GAAG,OAAIC,EAAKkE,cACjB/D,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG5BG,kBAAoB,SAAAC,GAAS,IAAAC,EACJD,EAAME,OAAtBf,EADoBc,EACpBd,KAAMgB,EADcF,EACdE,MACdX,EAAKC,SAAL1D,OAAAqE,EAAA,EAAArE,CAAA,GACEoD,EAAOgB,wFApBTE,KAAKqD,6CA+BG,IAAApD,EAAAD,KAER,OADAR,QAAQC,IAAIO,KAAKpB,MAAMoE,MAEtBzH,EAAAC,EAAAC,cAACyE,EAAD,CAAW5B,OAAK,GACd/C,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,cACdjF,EAAAC,EAAAC,cAAA,cACaF,EAAAC,EAAAC,cAAA,OAAK4E,MAAM,MAAMC,IAAM,yBAAyBC,IAAI,aAGjEhF,EAAAC,EAAAC,cAAA,8BACCuE,KAAKpB,MAAMoE,KAAKvC,OAChBlF,EAAAC,EAAAC,cAACiF,EAAD,KACEV,KAAKpB,MAAMoE,KAAK7E,IAAI,SAAA6E,GAAI,OACxBzH,EAAAC,EAAAC,cAAA,SAAOoF,IAAKmC,EAAKlC,KACfvF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6BAAqBuH,EAAKlE,OAC9BvD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAiBuH,EAAKC,YAC1B1H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAcuH,EAAKE,aACvB3H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAUuH,EAAKG,cACnB5H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uCAA+BuH,EAAKI,mBACxC7H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACwF,EAAD,CAAWC,QAAS,kBAAMjB,EAAKpC,WAAWmF,EAAKlC,eAOxDvF,EAAAC,EAAAC,cAAA,mCAGFF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,iBAAgB5F,EAAAC,EAAAC,cAAA,kCACxBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,gBAAe5F,EAAAC,EAAAC,cAAA,iCACvBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,cAAa5F,EAAAC,EAAAC,cAAA,8BACrBF,EAAAC,EAAAC,cAAA,KAAG0F,KAAK,UAAS5F,EAAAC,EAAAC,cAAA,6CA9EH4F,aCyBJiC,EApBH,kBACX/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACChI,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC+H,EAAD,MACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACClI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlF,IACjCpD,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWlF,IAC7CpD,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWvC,IACjD/F,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW5B,IAC9C1G,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWnC,IAClDnG,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWnB,IAC/CnH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWzB,IAC3C7G,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWlB,IACvCpH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrCzH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOG,UAAWhC,QCpBFiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1C,MACvB,2DCXN2C,IAASC,OAAO5I,EAAAC,EAAAC,cAAC2I,EAAD,MAASC,SAASC,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxF,KAAK,SAAAyF,GACjCA,EAAaC","file":"static/js/main.2bff99f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DeleteBtn.css';\r\n\r\n/*\r\n*Adds in Remove to end of user \r\n*/\r\nconst DeleteBtn = props => (\r\n\t<span className=\"delete-btn\" {...props}>\r\n\t\t- Remove ❌\r\n\t</span>\r\n);\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\n\r\n/*\r\n*table height and styles\r\n*/\r\n\r\nconst Jumbotron = ({ children }) => (\r\n  <div style={{ height: 300, clear: \"both\" }} className=\"jumbotron\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Jumbotron;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n\t// Gets all clock in times\r\n\tgetClockInTimes: function() {\r\n\t\treturn axios.get('/api/ClockInTimes');\r\n\t},\r\n\t// Gets the clock in time with the given id\r\n\tgetClockInTime: function(id) {\r\n\t\treturn axios.get('/api/ClockInTimes/' + id);\r\n\t},\r\n\t// Deletes the clock in time with the given id\r\n\tdeleteClockInTime: function(id) {\r\n\t\treturn axios.delete('/api/ClockInTimes/' + id);\r\n\t},\r\n\t// Saves a clock in time to the database (don't need)\r\n\tsaveClockInTime: function(clockInTimeData) {\r\n\t\treturn axios.post('/api/ClockInTimes', clockInTimeData);\r\n\t},\r\n\t// Gets all clock out times\r\n\tgetClockOutTimes: function() {\r\n\t\treturn axios.get('/api/ClockOutTimes');\r\n\t},\r\n\t// Gets the clock out time with the given id\r\n\tgetClockOutTime: function(id) {\r\n\t\treturn axios.get('/api/ClockOutTimes/' + id);\r\n\t},\r\n\t// Deletes the clock out time with the given id\r\n\tdeleteClockOutTime: function(id) {\r\n\t\treturn axios.delete('/api/ClockOutTimes/' + id);\r\n\t},\r\n\t// Saves a clock out time to the database (don't need)\r\n\tsaveClockOutTime: function(clockOutTimeData) {\r\n\t\treturn axios.post('/api/ClockOutTimes', clockOutTimeData);\r\n\t},\r\n\t// Gets all break times\r\n\tgetBreakTimes: function() {\r\n\t\treturn axios.get('/api/BreakTimes');\r\n\t},\r\n\t// Gets the break time with the given id\r\n\tgetBreakTime: function(id) {\r\n\t\treturn axios.get('/api/BreakTimes/' + id);\r\n\t},\r\n\t// Deletes the break time with the given id\r\n\tdeleteBreakTime: function(id) {\r\n\t\treturn axios.delete('/api/BreakTimes/' + id);\r\n\t},\r\n\t// Saves a break time to the database (don't need)\r\n\tsaveBreakTime: function(breakTimeData) {\r\n\t\treturn axios.post('/api/BreakTimes', breakTimeData);\r\n\t},\r\n\t// Gets all is sick documents\r\n    getIsSicks: function() {\r\n        return axios.get('/api/IsSick');\r\n    },\r\n    // Gets the is sick doc with given id\r\n    getIsSick: function(id) {\r\n        return axios.get('/api/IsSick/' + id);\r\n    },\r\n    // Deletes the is sick doc with the given id\r\n    deleteIsSick: function(id) {\r\n        return axios.delete('/api/IsSick/' + id);\r\n    },\r\n\t\r\n\t// Gets all users\r\n\tgetUsers: function() {\r\n\t\treturn axios.get('/api/User');\r\n\t},\r\n\t// Gets the user with the given id\r\n\tgetUser: function(id) {\r\n\t\treturn axios.get('/api/User/' + id);\r\n\t},\r\n\t// Deletes the user with the given id\r\n\tdeleteUser: function(id) {\r\n\t\treturn axios.delete('/api/User/' + id);\r\n\t},\r\n\t// Saves a user to the database\r\n\tsaveUser: function(userData) {\r\n\t\treturn axios.post('/api/User', userData);\r\n\t}\r\n};\r\n","import React from \"react\";\r\n\r\n/*\r\n*Colums for tables \r\n*/\r\n\r\nexport const Col = ({ size, children }) => (\r\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\n/*\r\n*Container File \r\n*/\r\nexport const Container = ({ fluid, children }) => (\r\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\n/*\r\n*sorts rows in table\r\n*/\r\n\r\nexport const Row = ({ fluid, children }) => (\r\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport const List = ({ children }) => {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">\r\n        {children}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ListItem = props => (\r\n  <li className=\"list-group-item\">\r\n    {props.children}\r\n  </li>\r\n);\r\n","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\n\r\n\r\nclass ClockInTimes extends React.Component {\r\n\t//state with 3 javascript objects delcared\r\n\tstate = {\r\n\t\tclockInTimes: [],\r\n\t\tname: '',\r\n\t\tclockedInTime: ''\r\n\t};\r\n\r\n\t//loads clock in times\r\n\tcomponentDidMount() {\r\n\t\tthis.loadClockInTimes();\r\n\t}\r\n\r\n\t//gets clock in times\r\n\tloadClockInTimes = () => {\r\n\t\tAPI.getClockInTimes()\r\n\t\t\t.then(res => this.setState({ clockInTimes: res.data, name: '', clockedInTime: '' }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t//deletes clock in times\r\n\tdeleteClockInTime = id => {\r\n\t\tAPI.deleteClockInTime(id)\r\n\t\t\t.then(res => this.loadClockInTimes())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\t /*\r\n\t *renders image\r\n\t *displays clock in times\r\n\t *gets clock in times\r\n\t *delete button if you want to remove a clock in time\r\n\t *four buttons to bring to clock out times, break times, employee sick list and employee details page\r\n\t */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<header>\r\n                \t\t\t<img width=\"30%\" src = \"./images/clockIn.png\" alt=\"Clock in Banner\"/>\r\n            \t\t\t</header>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div classname=\"clock-in\"><h1>Employee Clock-in Times</h1></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{this.state.clockInTimes.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{this.state.clockInTimes.map(clockInTime => (\r\n\t\t\t\t\t\t\t\t\t<ListItem key={clockInTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={'/clockInTimes/' + clockInTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{clockInTime.name} - Clocked into work at - {clockInTime.clockedInTime}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><DeleteBtn onClick={() => this.deleteClockInTime(clockInTime._id)} /></td> \r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t{/* <td><DeleteBtn onClick={() => this.deleteClockInTime(clockInTime._id)}/></td>  */}\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results Times To Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<a href=\"clockOutTimes\"><button>Clock-Out Times</button></a>\r\n\t\t\t\t\t\t<a href=\"breakTimes\"><button>Break Times</button></a>\r\n\t\t\t\t\t\t<a href=\"isSick\"><button>Employee Sick List</button></a>\r\n\t\t\t\t\t\t<a href=\"user\"><button>Employee Details</button></a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default ClockInTimes;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\n\r\nclass ClockInDetail extends Component {\r\n\t/*\r\n\t*Delcare a state and clockintime object\r\n\t*/\t\r\n\tstate = {\r\n\t\tclockInTime: {}\r\n\t};\r\n\r\n\t//gets clocck in time\r\n\tcomponentDidMount() {\r\n\t\tAPI.getClockInTime(this.props.match.params.id)\r\n\t\t\t.then(res => this.setState({ clockInTime: res.data }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\t/*\r\n\t*renders images\r\n\t*displays name of employee and then displays clock in time\r\n\t*Back button to clock in times\r\n\t*/\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<header>\r\n                \t\t\t\t<img width=\"30%\" src = \"../images/clockIn.png\" alt=\"Details Banner\"/>\r\n            \t\t\t\t</header>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{this.state.clockInTime.name} clocked in at {this.state.clockInTime.clockedInTime}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-2\">\r\n\t\t\t\t\t\t<Link to=\"/\">← Back to All Clock-In Times</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ClockInDetail;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\n\r\nclass ClockOutDetail extends Component {\r\n\t//object declared clockoutime\r\n\tstate = {\r\n\t\tclockOutTime: {}\r\n\t};\r\n\r\n\t//gets clock out time\r\n\tcomponentDidMount() {\r\n\t\tAPI.getClockOutTime(this.props.match.params.id)\r\n\t\t\t.then(res => this.setState({ clockOutTime: res.data }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\t/*\r\n\t*renders images\r\n\t*displays name of employee and then displays clock out time\r\n\t*Back button to clock out times\r\n\t*/\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-12\">\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<header>\r\n                \t\t\t\t<img width=\"30%\" src = \"../images/clockOut.png\" alt=\"Details Banner\"/>\r\n            \t\t\t\t</header>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t<h2>{this.state.clockOutTime.name} - Clocked out of work at - {this.state.clockOutTime.clockedOutTime}</h2>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-2\">\r\n\t\t\t\t\t\t<Link to=\"/clockOutTimes\">← Back to Clock-Out Times</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ClockOutDetail;\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\n\r\n/*\r\nIf no match is found for the url it will bring you to a page and display the 404 below\r\n*/\r\nconst NoMatch = () => (\r\n  <Container fluid>\r\n    <Row>\r\n      <Col size=\"md-12\">\r\n        <Jumbotron>\r\n          <h1>404 Page Not Found</h1>\r\n          <h1>\r\n            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n              🙄\r\n            </span>\r\n          </h1>\r\n        </Jumbotron>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from 'react';\r\nimport './Nav.css';\r\n\r\n/*\r\n*Navbar\r\n*Image displayed\r\n*/\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return(\r\n            <header>\r\n                <img src = \"./images/homepage.png\" alt=\"Main IMAGE\"/>\r\n                <h1> Welcome to Biztech</h1>\r\n                <h2> This area is for management only </h2>\r\n            </header>\r\n\r\n        )\r\n    }\r\n\r\n    \r\n}\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\n\r\n\r\nclass ClockOutTimes extends React.Component {\r\n\t//state with 3 javascript objects delcared\r\n\tstate = {\r\n\t\tclockOutTimes: [],\r\n\t\tname: '',\r\n\t\tclockedOutTime: ''\r\n\t};\r\n\r\n\t//loads clock out times\r\n\tcomponentDidMount() {\r\n\t\tthis.loadClockOutTimes();\r\n\t}\r\n\r\n\t//gets clock out times\r\n\tloadClockOutTimes = () => {\r\n\t\tAPI.getClockOutTimes()\r\n\t\t\t.then(res => this.setState({ clockOutTimes: res.data, name: '', clockedOutTime: '' }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t//deletes clock out times\r\n\tdeleteClockOutTime = id => {\r\n\t\tAPI.deleteClockOutTime(id)\r\n\t\t\t.then(res => this.loadClockOutTimes())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\t /*\r\n\t *renders image\r\n\t *displays clock out times\r\n\t *gets clock out times\r\n\t *delete button if you want to remove a clock out time\r\n\t *four buttons to bring to clock in times, break times, employee sick list and employee details page\r\n\t */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{}\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div classname=\"banner-out\">\r\n\t\t\t\t\t\t<header>\r\n                \t\t\t<img width=\"30%\" src = \"./images/clockOut.png\" alt=\"Clock out Banner\"/>\r\n            \t\t\t</header>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div classname=\"clock-out\"><h1>Employees Clock-Out Times:</h1></div>\r\n\t\t\t\t\t\t{this.state.clockOutTimes.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{this.state.clockOutTimes.map(clockOutTimes => (\r\n\t\t\t\t\t\t\t\t\t<ListItem key={clockOutTimes._id}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={'/clockOutTimes/' + clockOutTimes._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{clockOutTimes.name} Clocked out at {clockOutTimes.clockedOutTime}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><DeleteBtn onClick={() => this.deleteClockOutTime(clockOutTimes._id)} /></td>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results Times To Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<a href=\"clockInTimes\"><button>Clock-In Times</button></a>\r\n\t\t\t\t\t\t<a href=\"breakTimes\"><button>Break Times</button></a>\r\n\t\t\t\t\t\t<a href=\"isSick\"><button>Employee Sick List</button></a>\r\n\t\t\t\t\t\t<a href=\"user\"><button>Employee Details</button></a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default ClockOutTimes;\r\n","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\n\r\n\r\nclass BreakTimes extends React.Component {\r\n\t//state with 3 javascript objects delcared\r\n\tstate = {\r\n\t\tbreakTimes: [],\r\n\t\tname: '',\r\n\t\tbreakStartTime: '',\r\n\t\tbreakFinishTime: ''\r\n\t};\r\n\r\n\t//loads clock out times\r\n\tcomponentDidMount() {\r\n\t\tthis.loadBreakTimes();\r\n\t}\r\n\r\n\t//gets clock out times\r\n\tloadBreakTimes = () => {\r\n\t\tAPI.getBreakTimes()\r\n\t\t\t.then(res => this.setState({ breakTimes: res.data, name: '', breakStartTime: '' , breakFinishTime: '' ,}))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t//deletes clock out times\r\n\tdeleteBreakTime = id => {\r\n\t\tAPI.deleteBreakTime(id)\r\n\t\t\t.then(res => this.loadBreakTimes())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\t /*\r\n\t *renders image\r\n\t *displays break times\r\n\t *gets break times\r\n\t *delete button if you want to remove a break time\r\n\t *four buttons to bring to clock in times, clock out times, employee sick list and employee details page\r\n\t */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{}\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div classname=\"banner-out\">\r\n\t\t\t\t\t\t<header>\r\n                \t\t\t<img width=\"30%\" src = \"./images/breaks.png\" alt=\"breaks\"/>\r\n            \t\t\t</header>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div classname=\"break-start\"><h1>Employees Break Times</h1></div>\r\n\t\t\t\t\t\t{this.state.breakTimes.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{this.state.breakTimes.map(breakTime => (\r\n\t\t\t\t\t\t\t\t\t<ListItem key={breakTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={'/breakTimes/' + breakTime._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{breakTime.name} started their break at {breakTime.breakStartTime} and finished their break at {breakTime.breakFinishTime}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><DeleteBtn onClick={() => this.deleteBreakTime(breakTime._id)} /></td>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results Times To Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<a href=\"clockInTimes\"><button>Clock-In Times</button></a>\r\n                        <a href=\"clockOutTimes\"><button>Clock-Out Times</button></a>\r\n\t\t\t\t\t\t<a href=\"isSick\"><button>Employee Sick List</button></a>\r\n\t\t\t\t\t\t<a href=\"user\"><button>Employee Details</button></a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default BreakTimes;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\n\r\nclass BreakDetail extends Component {\r\n\t//object declared breaktime\r\n\tstate = {\r\n\t\tbreakTime: {}\r\n\t};\r\n\r\n\t//gets break time\r\n\tcomponentDidMount() {\r\n\t\tAPI.getBreakTime(this.props.match.params.id)\r\n\t\t\t.then(res => this.setState({ breakTime: res.data }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\t/*\r\n\t*renders images\r\n\t*displays name of employee and then displays break time\r\n\t*Back button to break times\r\n\t*/\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-12\">\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<header>\r\n                \t\t\t\t<img width=\"30%\" src = \"../images/breaks.png\" alt=\"Banner\"/>\r\n            \t\t\t\t</header>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t<h2>{this.state.breakTime.name} - Had a break from work at - {this.state.breakTime.breakStartTime}</h2>\r\n\t\t\t\t\t\t\t\t<h2>{this.state.breakTime.name} - Finished their break from work at - {this.state.breakTime.breakFinishTime}</h2>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-2\">\r\n\t\t\t\t\t\t<Link to=\"/breakTimes\">← Back to Break Times</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BreakDetail;","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\nclass IsSick extends Component {\r\n    //state with 3 javascript objects delcared\r\n\tstate = {\r\n\t\tisSicks: [],\r\n\t\tname: '',\r\n\t\tisEmployeeSick: ''\r\n\t};\r\n\r\n    //loads sick feature\r\n\tcomponentDidMount() {\r\n\t\tthis.loadIsSicks();\r\n\t}\r\n\r\n    //gets sick feature\r\n\tloadIsSicks = () => {\r\n\t\tAPI.getIsSicks()\r\n\t\t\t.then(res => this.setState({ isSicks: res.data, name: '', isEmployeeSick: '' }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n    //deletes sick feature\r\n\tdeleteIsSick = id => {\r\n\t\tAPI.deleteIsSick(id)\r\n\t\t\t.then(res => this.loadIsSicks())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n    /*\r\n\t *renders image\r\n\t *displays employees who have answered the sickness feature\r\n\t *gets the list of employees who have answered the sickness feature\r\n\t *delete button if you want to remove a sickness feature request\r\n\t */\r\n     render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    {}\r\n                    <Col size=\"md-6 sm-12\">\r\n\r\n                    <div classname=\"banner-out\">\r\n                        <header>\r\n                            <img width=\"30%\" src = \"./images/sickness.png\" alt=\"Clock out Banner\"/>\r\n                        </header>\r\n                    </div>\r\n\r\n                    <div classname=\"is-sick\"><h1>Employee's unable to make work today</h1></div>\r\n                        {this.state.isSicks.length ? (\r\n                            <List>\r\n\r\n                                {this.state.isSicks.map(isSick => (\r\n                                    <ListItem key={isSick._id}>\r\n                                    {isSick.isEmployeeSick == 'Yes' ? (\r\n                                        <table>\r\n                                            <td>{isSick.name}</td>\r\n                                            <td><DeleteBtn onClick={() => this.deleteIsSick(isSick._id)} /></td>\r\n                                        </table>\r\n                                         ): (\r\n                                            <h3>No Sick Employees</h3>\r\n                                        )} \r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n\r\n                        ) : (\r\n                            <h3>No Sick Employees</h3>\r\n                        )}\r\n                        <a href=\"clockInTimes\"><button>Clock-In Times</button></a>\r\n                        <a href=\"clockOutTimes\"><button>Clock-Out Times</button></a>\r\n                        <a href=\"breakTimes\"><button>Break Times</button></a>\r\n                        <a href=\"user\"><button>Employee Details</button></a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default IsSick;","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\n\r\n\r\nclass User extends Component {\r\n\t//state with 3 javascript objects delcared\r\n\tstate = {\r\n\t\tUser: [],\r\n\t\tname: '',\r\n\t\tfirstName: '',\r\n\t\tsecondName: '',\r\n\t\tdateOfBirth: '',\r\n\t\temergencyContact:''\r\n\t};\r\n\r\n\t//loads users\r\n\tcomponentDidMount() {\r\n\t\tthis.loadUsers();\r\n\t}\r\n\r\n\t//gets users from database\r\n\tloadUsers = () => {\r\n\t\tAPI.getUsers()\r\n\t\t\t.then(res => this.setState({ User: res.data, name: '', firstName: '', secondName: '', dateOfBirth: '', emergencyContact: ''}))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t//deletes users\r\n\tdeleteUser = id => {\r\n\t\tAPI.deleteUser(id)\r\n\t\t\t.then(res => this.loadUsers())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\thandleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\t/*\r\n\t*Loads in employees\r\n\t*Gets employees Email, First Name, Surname, DOB and Emergency Contact Number\r\n\t*Delete button\r\n\t*displays these all in a table\r\n\t*four buttons to bring to clock in times, clock out times, break times and employee sick list\r\n\t*/\r\n\trender() {\r\n\t\tconsole.log(this.state.User)\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t\t<div classname=\"banner-out\">\r\n\t\t\t\t\t\t<header>\r\n                \t\t\t<img width=\"30%\" src = \"./images/employees.png\" alt=\"breaks\"/>\r\n            \t\t\t</header>\r\n\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t<h1>Employee Details</h1>\r\n\t\t\t\t\t\t{this.state.User.length ? (\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t{this.state.User.map(User => (\r\n\t\t\t\t\t\t\t\t\t<table key={User._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><th>Employee Email: {User.name}</th></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><th>First Name: {User.firstName}</th></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><th>Surname: {User.secondName}</th></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><th>DOB: {User.dateOfBirth}</th></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><th>Emergency Contact Number: {User.emergencyContact}</th></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><DeleteBtn onClick={() => this.deleteUser(User._id)} /></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<a href=\"clockOutTimes\"><button>Clock-Out Times</button></a>\r\n\t\t\t\t\t<a href=\"clockInTimes\"><button>Clock-In Times</button></a>\r\n\t\t\t\t\t<a href=\"breakTimes\"><button>Break Times</button></a>\r\n\t\t\t\t\t<a href=\"isSick\"><button>Employee Sick List</button></a>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ClockInTimes from './pages/ClockInTimes';\r\nimport ClockInDetail from './pages/ClockInDetail';\r\nimport ClockOutDetail from './pages/ClockOutDetail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Navbar from './components/Nav/Nav';\r\nimport ClockOutTimes from './pages/ClockOutTimes';\r\nimport BreakTimes from './pages/BreakTimes';\r\nimport BreakDetail from './pages/BreakDetail';\r\nimport IsSick from './pages/IsSick';\r\nimport User from './pages/User';\r\n\r\n/*\r\n*Gets path for the pages and then links them to the page\r\n*/\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Navbar />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={ClockInTimes} />\r\n\t\t\t\t<Route exact path=\"/clockInTimes\" component={ClockInTimes} />\r\n\t\t\t\t<Route exact path=\"/clockInTimes/:id\" component={ClockInDetail} />\r\n\t\t\t\t<Route exact path=\"/clockOutTimes\" component={ClockOutTimes} />\r\n\t\t\t\t<Route exact path=\"/clockOutTimes/:id\" component={ClockOutDetail}/>\r\n\t\t\t\t<Route exact path=\"/breakTimes/:id\" component={BreakDetail} />\r\n\t\t\t\t<Route exact path=\"/breakTimes\" component={BreakTimes} />\r\n\t\t\t\t<Route exact path=\"/isSick\" component={IsSick} />\r\n\t\t\t\t<Route exact path=\"/user\" component={User}/>\r\n\t\t\t\t<Route component={NoMatch} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}